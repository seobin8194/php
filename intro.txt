html css javascript jquery -> 클라이언트 브라우저에서 해석되는 언어(클라이언트 language)
                              클라이언트가 서버에게 페이지를 요청하면 서버는 페이지 소스 그대로 클라이언트에게 제공하고 사용자 브라우저가 이를 해석하여 클라이언트가 이를 화면으로 보는것
php node.js -> 서버측에서 해석하는 언어(서버 language)
               클라이언트가 특정 페이지를 서버에게 요청하면 그 페이지 해석기(php.dll)를 통해 해석하고 그 결과(html)를 클라이언트에게 돌려줌
               따라서 서버측 언어는 해석기가 필요하므로 자기 환경이 필요하며 웹서버에 설치한다

웹서버
서버가 클라이언트의 요청을 서비스하기 위해서는 web server가 필요
web server에 내가 만든 사이트를 놓아야 클라이언트가 요청했을때 서비스할 수 있다
언어마다 적합한 웹서버가 있음
예) php - Apach 웹서버
 
php
웹에서 서버를 연동해서 실행하는 서버 사이드 스크립트 언어
웹서버에서 해석되는 스크립트언어
데이터베이스와 연동해서 편하게 사용할 수 있다
거의 모든 운영체제에서 개발이 가능하다
속도가 매우 빠르다 -> 내부적으로 c로 개발되어 있다
파일 업로드, 메일전송 등 기능을 자체적으로 지원한다
대용량 처리가 잘 되어 있지 않다(국가 사이트나 사용자가 많이 몰리는 서비스를 개발할때는 적합하지 않다)

php개발방식(서버 랜더링 방식 vs 프론트엔드 개발)
기존 개발방식은 퍼블리셔가 만든 html+css+js문서에 php개발자나 jsp개발자가 코드를 삽입하는 서버랜더링 방식으로 개발
요즘에는 html+css+js를 컴포넌트화하고 블록처럼 연결하며 서버에서는 데이터만 보내고 프론트에서는 이 데이터를 받아 화면을 바꿔주는 방식으로 개발한다
이렇게 문서를 컴포넌트화하고 데이터를 받아서 랜더링하는 사람을 프론트엔드개발자라고 하고 프론트에서 필요한 데이터를 db와 통신해서 가져오는 사람을 백엔드 개발자라고 한다

php문법
- HTML문서 내에 <?php로 시작하고 ?>로 끝난다
- php문법을 사용하면 확장명을 .php로 저장
- c언어처럼 php명령문 끝을 ";"으로 끝낸다
- html문서 영역 어디든 작성할 수 있다
- 주석은 작성자나 다른 개발자가 나중에 코드를 수정할때 참고할 수 있으며 웹 페이지 디버깅에 활용된다
  또한 클라이언트 브러우저에서는 확인할 수 없다
  여러줄 주석 /*  */ 한줄 주석 //
- html 스트림에 문자열을 출력하기 위해서는 echo() 함수를 사용한다

* index.html로 저장하고 <? .. ?>안에 문법을 작성하는 경우도 있는데 이는 php.ini에서 옵션을 수정하면 가능